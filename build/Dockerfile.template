<%= generation_message %>
ARG RUBY=2.6-p6.0.4

FROM instructure/ruby-passenger:$RUBY
LABEL maintainer="Instructure"

ARG POSTGRES_CLIENT=12
ENV APP_HOME /usr/src/app/
ENV RAILS_ENV production
ENV NGINX_MAX_UPLOAD_SIZE 10g
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8
ENV LC_CTYPE en_US.UTF-8
ENV LC_ALL en_US.UTF-8
ARG CANVAS_RAILS6_0=0
ENV CANVAS_RAILS6_0=${CANVAS_RAILS6_0}

ENV YARN_VERSION 1.19.1-1
ENV GEM_HOME /home/docker/.gem/$RUBY
ENV PATH $GEM_HOME/bin:$PATH
ENV BUNDLE_APP_CONFIG /home/docker/.bundle

WORKDIR $APP_HOME

USER root
RUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \
  && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
  && echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list \
  && printf 'path-exclude /usr/share/doc/*\npath-exclude /usr/share/man/*' > /etc/dpkg/dpkg.cfg.d/01_nodoc \
  && echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list \
  && curl -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
  && apt-get update -qq \
  && apt-get install -qqy --no-install-recommends \
       nodejs \
       yarn="$YARN_VERSION" \
       libxmlsec1-dev \
       python-lxml \
       libicu-dev \
       parallel \
       postgresql-client-$POSTGRES_CLIENT \
       unzip \
       pbzip2 \
       fontforge \
  && rm -rf /var/lib/apt/lists/* \
  && mkdir -p /home/docker/.gem/ruby/$RUBY_MAJOR.0
RUN if [ -e /var/lib/gems/$RUBY_MAJOR.0/gems/bundler-* ]; then BUNDLER_INSTALL="-i /var/lib/gems/$RUBY_MAJOR.0"; fi \
  && gem uninstall --all --ignore-dependencies --force $BUNDLER_INSTALL bundler \
  && gem install bundler --no-document -v 1.17.3 \
  && find $GEM_HOME ! -user docker | xargs chown docker:docker

USER docker

<% if jenkins? -%>
COPY --chown=docker:docker --from=local/cache-helper-collect-gems /tmp/dst ${APP_HOME}
<% else -%>
COPY --chown=docker:docker config/canvas_rails_switcher.rb ${APP_HOME}/config/canvas_rails_switcher.rb
COPY --chown=docker:docker Gemfile   ${APP_HOME}
COPY --chown=docker:docker Gemfile.d ${APP_HOME}Gemfile.d
COPY --chown=docker:docker gems      ${APP_HOME}gems
<% end -%>

RUN set -eux; \
  \
  # set up bundle config options \
  bundle config --global build.nokogiri --use-system-libraries \
  && bundle config --global build.ffi --enable-system-libffi \
  && mkdir -p \
    /home/docker/.bundle \
  # TODO: --without development \
  && bundle install --jobs $(nproc) \
  && rm -rf $GEM_HOME/cache

<% if jenkins? -%>
<% set_file_suffix 'webpack-builder' %>
<%= generation_message %>
FROM local/ruby-runner

COPY --chown=docker:docker --from=local/cache-helper-collect-yarn /tmp/dst ${APP_HOME}
<% else -%>
COPY --chown=docker:docker package.json ${APP_HOME}
COPY --chown=docker:docker yarn.lock    ${APP_HOME}
COPY --chown=docker:docker client_apps  ${APP_HOME}client_apps
COPY --chown=docker:docker packages     ${APP_HOME}packages
<% end -%>

RUN set -eux; \
<% if development? -%>
  mkdir -p .yardoc \
               app/stylesheets/brandable_css_brands \
               app/views/info \
               client_apps/canvas_quizzes/dist \
               client_apps/canvas_quizzes/node_modules \
               client_apps/canvas_quizzes/tmp \
               config/locales/generated \
               gems/canvas_i18nliner/node_modules \
               log \
               node_modules \
               packages/canvas-media/es \
               packages/canvas-media/lib \
               packages/canvas-media/node_modules \
               packages/canvas-planner/lib \
               packages/canvas-planner/node_modules \
               packages/canvas-rce/canvas \
               packages/canvas-rce/lib \
               packages/canvas-rce/node_modules \
               packages/jest-moxios-utils/node_modules \
               packages/js-utils/es \
               packages/js-utils/lib \
               packages/js-utils/node_modules \
               packages/k5uploader/es \
               packages/k5uploader/lib \
               packages/k5uploader/node_modules \
               packages/old-copy-of-react-14-that-is-just-here-so-if-analytics-is-checked-out-it-doesnt-change-yarn.lock/node_modules \
               pacts \
               public/dist \
               public/doc/api \
               public/javascripts/client_apps \
               public/javascripts/compiled \
               public/javascripts/translations \
               reports \
               tmp \
               /home/docker/.bundler/ \
               /home/docker/.cache/yarn \
               /home/docker/.gem/ \
    && \
<% end -%>
  (DISABLE_POSTINSTALL=1 yarn install --ignore-optional --pure-lockfile || DISABLE_POSTINSTALL=1 yarn install --ignore-optional --pure-lockfile --network-concurrency 1) \
  && yarn cache clean

<% if jenkins? -%>
COPY --chown=docker:docker --from=local/cache-helper-collect-packages /tmp/dst ${APP_HOME}
RUN yarn build:packages
<% else -%>
COPY --chown=docker:docker babel.config.js ${APP_HOME}
COPY --chown=docker:docker packages        ${APP_HOME}packages
COPY --chown=docker:docker script          ${APP_HOME}script

RUN yarn postinstall
<% end -%>

<% if jenkins? -%>
<% set_file_suffix 'webpack-runner' %>
<%= generation_message %>
FROM local/webpack-builder
COPY --chown=docker:docker --from=local/cache-helper-collect-webpack /tmp/dst ${APP_HOME}

ARG JS_BUILD_NO_UGLIFY=0
RUN COMPILE_ASSETS_API_DOCS=0 COMPILE_ASSETS_NPM_INSTALL=0 COMPILE_ASSETS_STYLEGUIDE=0 JS_BUILD_NO_UGLIFY="$JS_BUILD_NO_UGLIFY" bundle exec rails canvas:compile_assets

<% if jenkins? -%>
<% set_file_suffix 'webpack-cache' %>
<%= generation_message %>
FROM local/ruby-runner

COPY --chown=docker:docker --from=local/webpack-runner /usr/src/app/public ${APP_HOME}/public
<% end -%>

RUN mkdir -p <%= docker_compose_volume_paths.join(" \\\n             ") %>
<% set_file_suffix 'final' %>
<%= generation_message %>
FROM local/webpack-cache

COPY --chown=docker:docker . ${APP_HOME}

ARG COMPILE_ADDITIONAL_ASSETS=0
RUN bash -c "if [[ "$COMPILE_ADDITIONAL_ASSETS" == "1" ]]; then bundle exec rails doc:api css:styleguide; fi"
<% else -%>
COPY --chown=docker:docker . ${APP_HOME}

ARG JS_BUILD_NO_UGLIFY=0
RUN COMPILE_ASSETS_NPM_INSTALL=0 JS_BUILD_NO_UGLIFY="$JS_BUILD_NO_UGLIFY" bundle exec rails canvas:compile_assets
<% end -%>
